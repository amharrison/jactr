<actr>
	<model name="Searching Test" version="6">
  
		<modules>
			<module class="org.jactr.core.module.declarative.six.DefaultDeclarativeModule6"/>
			<module class="org.jactr.core.module.procedural.six.DefaultProceduralModule6"/>
			<module class="org.jactr.core.module.goal.six.DefaultGoalModule6"/>
			<module class="org.jactr.core.module.imaginal.six.DefaultImaginalModule6"/>
			<module class="org.jactr.core.module.retrieval.six.DefaultRetrievalModule6"/>
			<module class="org.jactr.modules.pm.motor.six.DefaultMotorModule6"/>
		</modules>
    
		<declarative-memory>
			<chunk name="starting" type="chunk"/>
			<chunk name="retrieving" type="chunk"/>
			<chunk name="motor-started" type="chunk"/>
			<chunk name="motor-completed" type="chunk"/>
			<chunk name="finished" type="chunk"/>
   
			<chunk-type name="sequence">
				<slot name="order" equals="null"/>
				<slot name="command" equals="null"/>
				<slot name="finger" equals="null"/>
				<slot name="hand" equals="null"/>
				<slot name="r" equals="null"/>
				<slot name="theta" equals="null"/>
			</chunk-type>
 
   <!-- goal chunk type that defines the sequence of firing -->
			<chunk-type name="goal">
				<slot name="state" equals="starting"/>
			</chunk-type>
   
			<chunk name="punch-j" type="sequence">
				<slot name="order" equals="1"/>
				<slot name="command" equals="punch"/>
				<slot name="finger" equals="index"/>
				<slot name="hand" equals="right"/>
			</chunk>
   
			<chunk name="peck-g" type="sequence">
				<slot name="order" equals="2"/>
				<slot name="command" equals="peck"/>
				<slot name="finger" equals="index"/>
				<slot name="hand" equals="left"/>
				<slot name="r" equals="1"/>
				<slot name="theta" equals="0"/>
			</chunk>
   
			<chunk name="punch-g" type="sequence">
				<slot name="order" equals="3"/>
				<slot name="command" equals="punch"/>
				<slot name="finger" equals="index"/>
				<slot name="hand" equals="left"/>
			</chunk>
   
			<chunk name="peck-recoil-h" type="sequence">
				<slot name="order" equals="4"/>
				<slot name="command" equals="peck-recoil"/>
				<slot name="finger" equals="index"/>
				<slot name="hand" equals="right"/>
				<slot name="r" equals="1"/>
				<slot name="theta" equals="3.14"/>
			</chunk>
   
			<chunk name="g1" type="goal"/>
		</declarative-memory>
    
		<procedural-memory>
 
  <!-- start up the test -->
			<production name="start">
				<conditions>
					<match buffer="goal" type="goal">
						<slot name="state" equals="starting"/>
					</match>
					<query buffer="retrieval">
						<slot name="state" equals="free"/>
					</query> 
				</conditions>
				<actions>
					<add buffer="retrieval" type="sequence">
						<slot name="order" equals="1"/>
					</add>
					<modify buffer="goal">
						<slot name="state" equals="retrieving"/>
					</modify>
					<output>"Trying to retrieve first movement"</output>
				</actions>
			</production>
  
  
  <!-- post completion production
       which launches another retrieval of the next movement
   -->
			<production name="retrieve-next-movement">
				<conditions>
					<match buffer="goal" type="goal">
						<slot name="state" equals="motor-completed"/>
					</match>
					<match buffer="retrieval" type="sequence">
						<slot name="order" equals="=index"/>
						<slot name=":state" equals="free"/>
					</match>
					<scriptable-condition><![CDATA[
          function matches()
          {
            jactr.requires("=index");
            var index = jactr.get("=index");
            jactr.set("=next", ++index);
		    return true;
		  }]]>
					</scriptable-condition>
				</conditions>
				<actions>
					<add buffer="retrieval" type="sequence">
						<slot name="order" equals="=next"/>
					</add>
					<modify buffer="goal">
						<slot name="state" equals="retrieving"/>
					</modify>
					<output>"Trying to retrieve =index movement"</output>
				</actions>
			</production>
  
  <!-- failed to find a sequence, we are done -->
			<production name="retrieval-failed">
				<conditions>
					<match buffer="goal" type="goal">
						<slot name="state" equals="retrieving"/>
					</match>
					<query buffer="retrieval">
						<slot name="state" equals="error"/>
					</query>
				</conditions>
				<actions>
					<remove buffer="retrieval"/>
					<modify buffer="goal">
						<slot name="state" equals="finished"/>
					</modify>
					<output>"Could not find the next movement sequence. Finished"</output>
					<stop/>
				</actions>
			</production>
  
  <!--  general movement end production -->
			<production name="movement-completed">
				<conditions>
					<match buffer="goal" type="goal">
						<slot name="state" equals="motor-started"/>
					</match>
					<match buffer="retrieval" type="sequence">
						<slot name="command" equals="=command"/>
					</match>
					<query buffer="motor">
						<slot name="state" equals="free"/>
					</query>
				</conditions>
				<actions>
					<modify buffer="goal">
						<slot name="state" equals="motor-completed"/>
					</modify>
					<modify buffer="retrieval"/> 
					<!-- keep it around for the next production -->
					<output>"Completed command =command defined by =retrieval"</output>
				</actions>
			</production>
  
  <!--  general movement failed production -->
			<production name="movement-failed">
				<conditions>
					<match buffer="goal" type="goal">
						<slot name="state" equals="motor-started"/>
					</match>
					<match buffer="retrieval" type="sequence">
						<slot name="command" equals="=command"/>
					</match>
					<query buffer="motor">
						<slot name="state" equals="error"/>
					</query>
				</conditions>
				<actions>
					<modify buffer="goal">
						<slot name="state" equals="finished"/>
					</modify>
					<output>"Failed to execute command =command defined by =retrieval"</output>
				</actions>
			</production>
  
  
  <!-- got a command sequence, lets do something with it -->
			<production name="start-punch">
				<conditions>
					<match buffer="goal" type="goal">
						<slot name="state" equals="retrieving"/>
					</match>
					<match buffer="retrieval" type="sequence">
						<slot name="command" equals="punch"/>
						<slot name="finger" equals="=finger"/>
						<slot name="hand" equals="=hand"/>
					</match>
					<query buffer="motor">
						<slot name="state" equals="free"/>
					</query>
				</conditions>
				<actions>
					<modify buffer="goal">
						<slot name="state" equals="motor-started"/>
					</modify>
					<add buffer="motor" type="punch">
						<slot name="finger" equals="=finger"/>
						<slot name="hand" equals="=hand"/>
					</add>
					<modify buffer="retrieval"/> <!-- keep it around for a bit -->
					<output>"Punching =hand =finger"</output>
				</actions>
			</production>
  
  <!-- got a command sequence, lets do something with it -->
			<production name="start-peck">
				<conditions>
					<match buffer="goal" type="goal">
						<slot name="state" equals="retrieving"/>
					</match>
					<match buffer="retrieval" type="sequence">
						<slot name="command" equals="peck"/>
						<slot name="finger" equals="=finger"/>
						<slot name="hand" equals="=hand"/>
						<slot name="r" equals="=r"/>
						<slot name="theta" equals="=theta"/>
					</match>
					<query buffer="motor">
						<slot name="state" equals="free"/>
					</query>
				</conditions>
				<actions>
					<modify buffer="goal">
						<slot name="state" equals="motor-started"/>
					</modify>
					<add buffer="motor" type="peck">
						<slot name="finger" equals="=finger"/>
						<slot name="hand" equals="=hand"/>
						<slot name="r" equals="=r"/>
						<slot name="theta" equals="=theta"/>
					</add>
					<modify buffer="retrieval"/> <!-- keep it around for a bit -->
					<output>"Pecking =hand =finger =r along =theta"</output>
				</actions>
			</production>
  
  <!-- got a command sequence, lets do something with it -->
			<production name="start-peck-recoil">
				<conditions>
					<match buffer="goal" type="goal">
						<slot name="state" equals="retrieving"/>
					</match>
					<match buffer="retrieval" type="sequence">
						<slot name="command" equals="peck-recoil"/>
						<slot name="finger" equals="=finger"/>
						<slot name="hand" equals="=hand"/>
						<slot name="r" equals="=r"/>
						<slot name="theta" equals="=theta"/>
					</match>
					<query buffer="motor">
						<slot name="state" equals="free"/>
					</query>
				</conditions>
				<actions>
					<modify buffer="goal">
						<slot name="state" equals="motor-started"/>
					</modify>
					<add buffer="motor" type="peck-recoil">
						<slot name="finger" equals="=finger"/>
						<slot name="hand" equals="=hand"/>
						<slot name="r" equals="=r"/>
						<slot name="theta" equals="=theta"/>
					</add>
					<modify buffer="retrieval"/> <!-- keep it around for a bit -->
					<output>"Pecking and recoil =hand =finger =r along =theta"</output>
				</actions>
			</production>
  
        
		</procedural-memory>
  
   
		<buffer name="goal" chunk="g1"/>  
		<parameters>
			<parameter name="EnablePersistentExecution" value="true"/>
		</parameters>
	</model>
</actr>
