<actr>
  <model name="Searching Test" version="6">
  
 <modules>
  <module class="org.jactr.core.module.declarative.six.DefaultDeclarativeModule6"/>
  <module class="org.jactr.core.module.procedural.six.DefaultProceduralModule6"/>
  <module class="org.jactr.core.module.goal.six.DefaultGoalModule6"/>
  <module class="org.jactr.core.module.imaginal.six.DefaultImaginalModule6"/>
  <module class="org.jactr.core.module.retrieval.six.DefaultRetrievalModule6"/>
  <module class="org.jactr.modules.pm.visual.six.DefaultVisualModule6">
   <parameters>
     <!-- turned off the functional testing -->
     <parameter name="EnableVisualBufferStuff" value="false"/>
   </parameters>
  </module>
 </modules>
    
   <declarative-memory>
    <chunk name="searching" type="chunk"/>
    <chunk name="found" type="chunk"/>
    <chunk name="starting" type="chunk"/>
    <chunk name="failed" type="chunk"/>
    <chunk name="succeeded" type="chunk"/>
    
    <chunk name="test-kind" type="chunk"/>
    <chunk name="test-less-than" type="chunk"/>
    <chunk name="test-greater-than" type="chunk"/>
    <chunk name="test-value" type="chunk"/>
    <chunk name="test-color" type="chunk"/>
    <chunk name="test-size" type="chunk"/>
    
    <chunk-type name="goal">
     <slot name="status" equals="starting"/>
     <slot name="stage" equals="null"/>
    </chunk-type>
    
    <chunk-type name="attending-test" parent="goal">
     <slot name="testValue" equals="null"/>
    </chunk-type>
    
    <chunk name="goal" type="attending-test">
     <slot name="testValue" equals="'center'"/>
     <slot name="stage" equals="test-kind"/>
    </chunk>
   </declarative-memory>
    
    <procedural-memory>
        
        <!-- search for text nearest to center -->
        <production name="search-kind">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="starting"/>
                    <slot name="stage" equals="test-kind"/>
                </match>
                <query buffer="visual-location">
                    <slot name="state" equals="free"/>
                </query>
            </conditions>
            <actions>
                <add buffer="visual-location" type="visual-location">
                    <slot name=":attended" equals="null"/>
                    <slot name="nearest" equals="current"/>
                    <slot name="kind" equals="text"/>
                </add>
                <modify buffer="goal">
                    <slot name="status" equals="searching"/>
                </modify>
            </actions>
        </production>
        
        <!-- should find center -->
        <production name="search-less-than">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="succeeded"/>
                    <slot name="stage" equals="test-kind"/>
                </match>
                <query buffer="visual-location">
                    <slot name="state" equals="free"/>
                </query>
            </conditions>
            <actions>
                <output>"test-kind succeeded, searching less-than"</output>
                <modify buffer="goal">
                    <slot name="stage" equals="test-less-than"/>
                    <slot name="status" equals="searching"/>
                    <slot name="testValue" equals="'lowerLeft'"/>
                </modify>
                <add buffer="visual-location" type="visual-location">
                    <slot name=":attended" equals="null"/>
                    <slot name="screen-x" equals="less-than-current"/>
                    <slot name="screen-y" equals="less-than-current"/>
                </add>
            </actions>
        </production>
        
        <!-- should find lower left -->
        <production name="search-greater-than">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="succeeded"/>
                    <slot name="stage" equals="test-less-than"/>
                    <slot name="stage" equals="=variable"/>
                </match>
                <query buffer="visual-location">
                    <slot name="state" equals="free"/>
                </query>
            </conditions>
            <actions>
                <output>"=variable succeeded, searching greater-than"</output>
                <modify buffer="goal">
                    <slot name="stage" equals="test-greater-than"/>
                    <slot name="status" equals="searching"/>
                    <slot name="testValue" equals="'upperRight'"/>
                </modify>
                <add buffer="visual-location" type="visual-location">
                    <slot name=":attended" equals="null"/>
                    <slot name="screen-x" equals="greater-than-current"/>
                    <slot name="screen-y" equals="greater-than-current"/>
                </add>
            </actions>
        </production>
        
        <!-- should find upperRight -->
        <production name="search-color">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="succeeded"/>
                    <slot name="stage" equals="test-greater-than"/>
                </match>
                <query buffer="visual-location">
                    <slot name="state" equals="free"/>
                </query>
            </conditions>
            <actions>
                <output>"greater-than succeeded, searching for color"</output>
                <modify buffer="goal">
                    <slot name="stage" equals="test-color"/>
                    <slot name="status" equals="searching"/>
                    <slot name="testValue" equals="'lowerRight'"/>
                </modify>
                <add buffer="visual-location" type="visual-location">
                    <slot name=":attended" equals="null"/>
                    <slot name="color" equals="white"/>
                </add>
            </actions>
        </production>
        
        <!-- should find lower middle -->
        <production name="search-size">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="succeeded"/>
                    <slot name="stage" equals="test-color"/>
                </match>
                <query buffer="visual-location">
                    <slot name="state" equals="free"/>
                </query>
            </conditions>
            <actions>
                <output>"succeeded color search, looking for the largest"</output>
                <modify buffer="goal">
                    <slot name="stage" equals="test-size"/>
                    <slot name="status" equals="searching"/>
                    <slot name="testValue" equals="'lowerMiddle'"/>
                </modify>
                <add buffer="visual-location" type="visual-location">
                    <slot name=":attended" equals="null"/>
                    <slot name="size" equals="greater-than-current"/>
                </add>
            </actions>
        </production>
        
        <!-- done with the search -->
        <production name="search-size-succeeded">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="succeeded"/>
                    <slot name="stage" equals="test-size"/>
                </match>
            </conditions>
            <actions>
                <output>"size search succeeded, we are done!"</output>
                <remove buffer="goal"/>
                <remove buffer="visual-location"/>
                <stop/>
            </actions>
        </production>
        
        <production name="search-match-failed">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="searching"/>
                    <slot name="testValue" equals="=value"/>
                    <slot name="stage" equals="=stage"/>
                </match>
                <match buffer="visual-location" type="visual-location">
                    <slot name="value" equals="=text"/>
                    <slot name="value" not="=value"/>
                </match>
                <query buffer="visual">
                    <slot name="state" equals="free"/>
                </query>
            </conditions>
            <actions>
                <output>"=stage failed, =text is not =value "</output>
                <remove buffer="goal"/>
                <remove buffer="visual-location"/>
            </actions>
        </production>
        
        <production name="search-failed">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="searching"/>
                    <slot name="stage" equals="=stage"/>
                </match>
                <query buffer="visual-location">
                    <slot name="state" equals="error"/>
                </query>
            </conditions>
            <actions>
                <modify buffer="goal">
                    <slot name="status" equals="failed"/>
                </modify>
                <remove buffer="goal"/>
                <remove buffer="visual-location"/>
                <output>"=stage failed. I couldnt find anything"</output>
            </actions>
        </production>
        
        <production name="search-succeeded">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="searching"/>
                    <slot name="testValue" equals="=testValue"/>
                </match>
                <match buffer="visual-location" type="visual-location">
                    <slot name="screen-x" equals="=x"/>
                    <slot name="screen-y" equals="=y"/>
                    <slot name="value" equals="=testValue"/>
                </match>
                <query buffer="visual">
                    <slot name="state" equals="free"/>
                </query>
            </conditions>
            <actions>
                <output>"Found =testValue at =x and =y shifting attention"</output>
                <!--
                <add buffer="visual" type="move-attention">
                    <slot name="screen-pos" equals="=visual-location"/>
                </add>
                -->
                <add buffer="visual" type="attend-to">
                    <slot name="where" equals="=visual-location"/>
                </add>
                <modify buffer="visual-location" />
                <modify buffer="goal">
                    <slot name="status" equals="found"/>
                </modify>
            </actions>
        </production>
        
        <production name="encoding-succeeded">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="found"/>
                    <slot name="testValue" equals="=testValue"/>
                </match>
                <match buffer="visual" type="visual-object">
                    <slot name="value" equals="=testValue"/>
                </match>
            </conditions>
            <actions>
                <output>"Found =testValue visual chunk!"</output>
                <modify buffer="goal">
                    <slot name="status" equals="succeeded"/>
                </modify>
                <remove buffer="visual"/>
            </actions>
        </production>
        
        <production name="encoding-match-failed">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="found"/>
                    <slot name="testValue" equals="=testValue"/>
                </match>
                <match buffer="visual" type="visual-object">
                    <slot name="value" equals="=value"/>
                    <slot name="value" not="=testValue"/>
                </match>
            </conditions>
            <actions>
                <output>"Failed, =value but not =testValue visual chunk"</output>
                <remove buffer="goal"/>
                <remove buffer="visual"/>
            </actions>
        </production>
        
        <production name="encoding-failed">
            <conditions>
                <match buffer="goal" type="attending-test">
                    <slot name="status" equals="found"/>
                </match>
                <query buffer="visual">
                    <slot name="state" equals="error"/>
                </query>
            </conditions>
            <actions>
                <output>"Failed, encoding"</output>
                <remove buffer="goal"/>
                <remove buffer="visual"/>
            </actions>
        </production>
        
    </procedural-memory>
  
   
 <buffer name="goal" chunk="goal"/>  
</model>
</actr>
