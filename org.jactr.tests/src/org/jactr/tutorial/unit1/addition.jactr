<?xml version="1.0" encoding="UTF-8"?>
<actr>
  <model name="Unit1 Addition" version="6">
  
 <modules>
  <module class="org.jactr.core.module.declarative.six.DefaultDeclarativeModule6"/>
  <module class="org.jactr.core.module.procedural.six.DefaultProceduralModule6"/>
  <module class="org.jactr.core.module.goal.six.DefaultGoalModule6"/>
  <module class="org.jactr.core.module.retrieval.six.DefaultRetrievalModule6"/>
 </modules> 
 
    <declarative-memory>
      <chunk-type name="add">
        <slot name="arg1" equals="nil"/>
        <slot name="arg2" equals="nil"/>
        <slot name="count" equals="nil"/>
        <slot name="sum" equals="nil"/>
      </chunk-type>

      <chunk-type name="count-order">
        <slot name="first" equals="nil"/>
        <slot name="second" equals="nil"/>
      </chunk-type>


      <!-- chunks for add -->
        <chunk name="second-goal" type="add">
          <slot name="arg1" equals="5.0"/>
          <slot name="arg2" equals="2.0"/>
          <slot name="count" equals="nil"/>
          <slot name="sum" equals="nil"/>
        </chunk>

      <!-- chunks for chunk -->
      <!-- chunks for count-order -->
        <chunk name="a" type="count-order">
          <slot name="first" equals="0.0"/>
          <slot name="second" equals="1.0"/>
        </chunk>

        <chunk name="b" type="count-order">
          <slot name="first" equals="1.0"/>
          <slot name="second" equals="2.0"/>
        </chunk>

        <chunk name="c" type="count-order">
          <slot name="first" equals="2.0"/>
          <slot name="second" equals="3.0"/>
        </chunk>

        <chunk name="d" type="count-order">
          <slot name="first" equals="3.0"/>
          <slot name="second" equals="4.0"/>
        </chunk>

        <chunk name="e" type="count-order">
          <slot name="first" equals="4.0"/>
          <slot name="second" equals="5.0"/>
        </chunk>

        <chunk name="f" type="count-order">
          <slot name="first" equals="5.0"/>
          <slot name="second" equals="6.0"/>
        </chunk>

        <chunk name="g" type="count-order">
          <slot name="first" equals="6.0"/>
          <slot name="second" equals="7.0"/>
        </chunk>

        <chunk name="h" type="count-order">
          <slot name="first" equals="7.0"/>
          <slot name="second" equals="8.0"/>
        </chunk>

        <chunk name="i" type="count-order">
          <slot name="first" equals="8.0"/>
          <slot name="second" equals="9.0"/>
        </chunk>

        <chunk name="j" type="count-order">
          <slot name="first" equals="9.0"/>
          <slot name="second" equals="10.0"/>          
        </chunk>

      <!-- chunks for error -->
      <!-- chunks for module-state -->
    </declarative-memory>
    <procedural-memory>
    
      <production name="initialize-addition">
          <condition>
            <match buffer="goal" type="add">
              <slot name="arg1" equals="=num1"/>
              <slot name="arg2" equals="=num2"/>
              <slot name="sum" equals="nil"/>
            </match>
          </condition>
          <action>
            <modify buffer="goal">
              <slot name="count" equals="0.0"/>
              <slot name="sum" equals="=num1"/>
            </modify>
            <add buffer="retrieval" type="count-order">
              <slot name="first" equals="=num1"/>
            </add>
          </action>
        </production>
        
        <production name="terminate-addition">
          <condition>
            <match buffer="goal" type="add">
              <slot name="arg1" equals="=num1"/>
              <slot name="arg2" equals="=num2"/>
              <slot name="count" equals="=num2"/>
              <slot name="sum" equals="=answer"/>
            </match>
          </condition>
          <action>
            <modify buffer="goal">
              <slot name="count" equals="nil"/>
            </modify>
            <output>"=num1 + =num2 is =answer"</output>
          </action>
        </production>
        

        <production name="increment-count">
          <condition>
            <match buffer="goal" type="add">
              <slot name="sum" equals="=sum"/>
              <slot name="count" equals="=count"/>
            </match>
            <match buffer="retrieval" type="count-order">
              <slot name="first" equals="=count"/>
              <slot name="second" equals="=newCount"/>
            </match>
          </condition>
          <action>
            <modify buffer="goal">
              <slot name="count" equals="=newCount"/>
            </modify>
            <add buffer="retrieval" type="count-order">
              <slot name="first" equals="=sum"/>
            </add>
            <output>"That was the =newCount finger"</output>
          </action>
        </production>

        <production name="increment-sum">
          <condition>
            <match buffer="goal" type="add">
              <slot name="sum" equals="=sum"/>
              <slot name="count" equals="=count"/>
              <slot name="arg2" not="=count"/>
            </match>

            <match buffer="retrieval" type="count-order">
              <slot name="first" equals="=sum"/>
              <slot name="second" equals="=newSum"/>
            </match>
          </condition>
          <action>
            <modify buffer="goal">
              <slot name="sum" equals="=newSum"/>
            </modify>
            <add buffer="retrieval" type="count-order">
              <slot name="first" equals="=count"/>
            </add>
            <output>"=newSum"</output>
          </action>
        </production>

       


<!-- productions for count-order -->
<!-- productions for error -->
<!-- productions for module-state -->
    </procedural-memory>

    <buffer name="goal" chunk="second-goal"/>
    
    <parameters>
      <parameter name="CycleSkipping" value="true"/>
    </parameters>
</model>
</actr>
