<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">
<refactoring comment="Rename package &apos;org.jactr.core.request&apos; to &apos;org.jactr.core.production.request&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr/java/org.jactr.core.request&apos;&#x0A;- Renamed element: &apos;org.jactr/java/org.jactr.core.production.request&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings&#x0A;- Rename subpackages of the package" description="Rename package &apos;org.jactr.core.request&apos;" flags="589830" hierarchical="true" id="org.eclipse.jdt.ui.rename.package" input="/java&lt;org.jactr.core.request" name="org.jactr.core.production.request" project="org.jactr" qualified="false" references="true" textual="false" version="1.0"/>
<refactoring accessors="true" comment="Delete 1 element(s) from project &apos;org.jactr&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.production.request.IBufferRequest.java&apos;" description="Delete element" element1="/java&lt;org.jactr.core.production.request{IBufferRequest.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" project="org.jactr" resources="0" subPackages="false" version="1.0"/>
<refactoring accessors="true" comment="Delete 1 element(s) from project &apos;org.jactr&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.production.condition.PropertyCondition.java&apos;" description="Delete element" element1="/java&lt;org.jactr.core.production.condition{PropertyCondition.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" project="org.jactr" resources="0" subPackages="false" version="1.0"/>
<refactoring accessors="true" comment="Delete 1 element(s) from project &apos;org.jactr&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.utils.Duplicateable.java&apos;" description="Delete element" element1="/java&lt;org.jactr.core.utils{Duplicateable.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" project="org.jactr" resources="0" subPackages="false" version="1.0"/>
<refactoring comment="Rename field &apos;AGE&apos; in &apos;org.jactr.core.model.basic.BasicModel&apos; to &apos;AGE_PARAM&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.model.basic.BasicModel.AGE&apos;&#x0A;- Renamed element: &apos;org.jactr.core.model.basic.BasicModel.AGE_PARAM&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;AGE&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/java&lt;org.jactr.core.model.basic{BasicModel.java[BasicModel^AGE" name="AGE_PARAM" project="org.jactr" references="true" setter="false" textual="false" version="1.0"/>
<refactoring accessors="true" comment="Delete 1 element(s) from project &apos;org.jactr&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.IAcceptsRequests.java&apos;" description="Delete element" element1="/java&lt;org.jactr.core.buffer{IAcceptsRequests.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" project="org.jactr" resources="0" subPackages="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.core.buffer.IAcceptsChunkPattern&apos; to &apos;IRequestableBuffer&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.IAcceptsChunkPattern&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.IRequestableBuffer&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;IAcceptsChunkPattern&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.core.buffer{IAcceptsChunkPattern.java[IAcceptsChunkPattern" matchStrategy="1" name="IRequestableBuffer" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Change method &apos;public void org.jactr.core.buffer.IRequestableBuffer.addChunkPattern(jactr.core.production.request.IRequest source)&apos; to &apos;public boolean request(jactr.core.production.request.IRequest source)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- New name: &apos;request&apos;&#x0A;- New return type: &apos;boolean&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern source" delegate="false" deprecate="true" description="Change method &apos;addChunkPattern&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.buffer{IRequestableBuffer.java[IRequestableBuffer~addChunkPattern~QChunkPattern;" name="request" parameter1="ChunkPattern source 0 org.jactr.core.production.request.IRequest source false" project="org.jactr" return="boolean" version="1.0"/>
<refactoring comment="Change method &apos;public boolean org.jactr.core.buffer.IRequestableBuffer.request(IRequest source)&apos; to &apos;public boolean request(IRequest source) throws IllegalArgumentException&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Added exceptions:&#x0A;     IllegalArgumentException" delegate="false" deprecate="true" description="Change method &apos;request&apos;" element1="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalArgumentException.class[IllegalArgumentException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.buffer{IRequestableBuffer.java[IRequestableBuffer~request~QIRequest;" kind1="1" name="request" parameter1="IRequest source 0 IRequest source false" project="org.jactr" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.core.buffer.delegate.IChunkPatternProcessor&apos; to &apos;IRequestProcessor&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.delegate.IChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.delegate.IRequestProcessor&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;IChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.core.buffer.delegate{IChunkPatternProcessor.java[IChunkPatternProcessor" matchStrategy="1" name="IRequestProcessor" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.core.buffer.delegate.IRequestProcessor&apos; to &apos;IRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.delegate.IRequestProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.delegate.IRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;IRequestProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.core.buffer.delegate{IRequestProcessor.java[IRequestProcessor" matchStrategy="1" name="IRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Change method &apos;public boolean org.jactr.core.buffer.delegate.IRequestDelegate.process(jactr.core.production.request.IRequest request, IDelegatableChunkPatternBuffer buffer)&apos; to &apos;public boolean request(jactr.core.production.request.IRequest request, IDelegatableChunkPatternBuffer buffer)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- New name: &apos;request&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;process&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.buffer.delegate{IRequestDelegate.java[IRequestDelegate~process~QChunkPattern;~QIDelegatableChunkPatternBuffer;" name="request" parameter1="ChunkPattern pattern 0 org.jactr.core.production.request.IRequest request false" parameter2="IDelegatableChunkPatternBuffer buffer 1 IDelegatableChunkPatternBuffer buffer false" project="org.jactr" version="1.0"/>
<refactoring comment="Rename method &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer.addChunkPatternProcessor(...)&apos; to &apos;addRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer.addChunkPatternProcessor(...)&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer.addRequestDelegate(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;addChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/java&lt;org.jactr.core.buffer.delegate{IDelegatableChunkPatternBuffer.java[IDelegatableChunkPatternBuffer~addChunkPatternProcessor~QIRequestDelegate;" name="addRequestDelegate" project="org.jactr" references="true" version="1.0"/>
<refactoring comment="Rename method &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer.removeChunkPatternProcessor(...)&apos; to &apos;removeRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer.removeChunkPatternProcessor(...)&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer.removeRequestDelegate(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;removeChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/java&lt;org.jactr.core.buffer.delegate{IDelegatableChunkPatternBuffer.java[IDelegatableChunkPatternBuffer~removeChunkPatternProcessor~QIRequestDelegate;" name="removeRequestDelegate" project="org.jactr" references="true" version="1.0"/>
<refactoring comment="Rename method &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer.getChunkPatternProcessors()&apos; to &apos;getRequestDelegates&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer.getChunkPatternProcessors()&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer.getRequestDelegates()&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getChunkPatternProcessors&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/java&lt;org.jactr.core.buffer.delegate{IDelegatableChunkPatternBuffer.java[IDelegatableChunkPatternBuffer~getChunkPatternProcessors" name="getRequestDelegates" project="org.jactr" references="true" version="1.0"/>
<refactoring comment="Rename enum constant &apos;PATTERN_ADDED&apos; of &apos;org.jactr.core.buffer.event.ActivationBufferEvent.Type&apos; to &apos;REQUEST_ACCEPTED&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.event.ActivationBufferEvent.Type.PATTERN_ADDED&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.event.ActivationBufferEvent.Type.REQUEST_ACCEPTED&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename enum constant &apos;PATTERN_ADDED&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.enum.constant" input="/java&lt;org.jactr.core.buffer.event{ActivationBufferEvent.java[ActivationBufferEvent[Type^PATTERN_ADDED" name="REQUEST_ACCEPTED" project="org.jactr" references="true" setter="false" textual="false" version="1.0"/>
<refactoring comment="Change method &apos;public org.jactr.core.buffer.event.ActivationBufferEvent.ActivationBufferEvent(IActivationBuffer buffer, IRequest request)&apos; to &apos;public ActivationBufferEvent(IActivationBuffer buffer, IRequest request)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;ActivationBufferEvent&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.buffer.event{ActivationBufferEvent.java[ActivationBufferEvent~ActivationBufferEvent~QIActivationBuffer;~QChunkPattern;" name="ActivationBufferEvent" parameter1="IActivationBuffer buffer 0 IActivationBuffer buffer false" parameter2="ChunkPattern pattern 1 IRequest request false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public ChunkPattern org.jactr.core.buffer.event.ActivationBufferEvent.getSourcePattern()&apos; to &apos;public IRequest getRequest()&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- New name: &apos;getRequest&apos;&#x0A;- New return type: &apos;IRequest&apos;" delegate="false" deprecate="true" description="Change method &apos;getSourcePattern&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.buffer.event{ActivationBufferEvent.java[ActivationBufferEvent~getSourcePattern" name="getRequest" project="org.jactr" return="IRequest" version="1.0"/>
<refactoring comment="Rename method &apos;org.jactr.core.buffer.event.IActivationBufferListener.chunkPatternAdded(...)&apos; to &apos;requestAccepted&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.event.IActivationBufferListener.chunkPatternAdded(...)&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.event.IActivationBufferListener.requestAccepted(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;chunkPatternAdded&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/java&lt;org.jactr.core.buffer.event{IActivationBufferListener.java[IActivationBufferListener~chunkPatternAdded~QActivationBufferEvent;" name="requestAccepted" project="org.jactr" references="true" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer&apos; to &apos;IDelegatableRequestableBuffer&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.delegate.IDelegatableChunkPatternBuffer&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.delegate.IDelegatableRequestableBuffer&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;IDelegatableChunkPatternBuffer&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.core.buffer.delegate{IDelegatableChunkPatternBuffer.java[IDelegatableChunkPatternBuffer" matchStrategy="1" name="IDelegatableRequestableBuffer" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.core.buffer.delegate.IDelegatableRequestableBuffer&apos; to &apos;IDelegatedRequestableBuffer&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.delegate.IDelegatableRequestableBuffer&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.delegate.IDelegatedRequestableBuffer&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;IDelegatableRequestableBuffer&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.core.buffer.delegate{IDelegatableRequestableBuffer.java[IDelegatableRequestableBuffer" matchStrategy="1" name="IDelegatedRequestableBuffer" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.core.buffer.delegate.DefaultDelegatableChunkPatternBuffer6&apos; to &apos;DefaultDelegatedRequestableBuffer6&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.delegate.DefaultDelegatableChunkPatternBuffer6&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.delegate.DefaultDelegatedRequestableBuffer6&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;DefaultDelegatableChunkPatternBuffer6&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.core.buffer.delegate{DefaultDelegatableChunkPatternBuffer6.java[DefaultDelegatableChunkPatternBuffer6" matchStrategy="1" name="DefaultDelegatedRequestableBuffer6" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Copy 1 elements(s) to &apos;org.jactr.core.buffer.delegate.AddChunkRequestDelegate.java&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Destination element: &apos;org.jactr.core.buffer.delegate.AddChunkRequestDelegate.java&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.delegate.AddChunkRequestDelegate.java&apos;" description="Copy compilation unit" destination="/java&lt;org.jactr.core.buffer.delegate{AddChunkRequestDelegate.java" element1="/java&lt;org.jactr.core.buffer.delegate{AddChunkRequestDelegate.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" log="/java&lt;org.jactr.core.buffer.delegate{AddChunkRequestDelegate.java&#x09;true&#x09;true&#x09;AddChunkTypeRequestDelegate.java" policy="org.eclipse.jdt.ui.copyResources" project="org.jactr" units="1" version="1.0"/>
<refactoring comment="Change method &apos;public boolean org.jactr.core.buffer.delegate.IRequestDelegate.request(IRequest request, jactr.core.buffer.IActivationBuffer buffer)&apos; to &apos;public boolean request(IRequest request, jactr.core.buffer.IActivationBuffer buffer)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     IDelegatedRequestableBuffer buffer" delegate="false" deprecate="true" description="Change method &apos;request&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.buffer.delegate{IRequestDelegate.java[IRequestDelegate~request~QIRequest;~QIDelegatedRequestableBuffer;" name="request" parameter1="IRequest request 0 IRequest request false" parameter2="IDelegatedRequestableBuffer buffer 1 org.jactr.core.buffer.IActivationBuffer buffer false" project="org.jactr" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.core.buffer.six.AbstractPatternBuffer6&apos; to &apos;AbstractRequestableBuffer6&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.six.AbstractPatternBuffer6&apos;&#x0A;- Renamed element: &apos;org.jactr.core.buffer.six.AbstractRequestableBuffer6&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AbstractPatternBuffer6&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.core.buffer.six{AbstractPatternBuffer6.java[AbstractPatternBuffer6" matchStrategy="1" name="AbstractRequestableBuffer6" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Change method &apos;public Future&lt;IChunk&gt; org.jactr.core.module.retrieval.IRetrievalModule.retrieveChunk(ChunkTypeRequest chunkRequest)&apos; to &apos;public Future&lt;IChunk&gt; retrieveChunk(ChunkTypeRequest chunkRequest)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern chunk" delegate="false" deprecate="true" description="Change method &apos;retrieveChunk&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.retrieval{IRetrievalModule.java[IRetrievalModule~retrieveChunk~QChunkPattern;" name="retrieveChunk" parameter1="ChunkPattern chunk 0 ChunkTypeRequest chunkRequest false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public Future&lt;Collection&lt;IChunk&gt;&gt; org.jactr.core.module.declarative.IDeclarativeModule.findExactMatches(jactr.core.production.request.ChunkTypeRequest request, Comparator&lt;IChunk&gt; sorter, double activationThreshold, boolean bestOne)&apos; to &apos;public Future&lt;Collection&lt;IChunk&gt;&gt; findExactMatches(jactr.core.production.request.ChunkTypeRequest request, Comparator&lt;IChunk&gt; sorter, double activationThreshold, boolean bestOne)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;findExactMatches&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.declarative{IDeclarativeModule.java[IDeclarativeModule~findExactMatches~QChunkPattern;~QComparator\&lt;QIChunk;&gt;;~D~Z" name="findExactMatches" parameter1="ChunkPattern pattern 0 org.jactr.core.production.request.ChunkTypeRequest request false" parameter2="Comparator&lt;IChunk&gt; sorter 1 Comparator&lt;IChunk&gt; sorter false" parameter3="double activationThreshold 2 double activationThreshold false" parameter4="boolean bestOne 3 boolean bestOne false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public Future&lt;Collection&lt;IChunk&gt;&gt; org.jactr.core.module.declarative.IDeclarativeModule.findPartialMatches(ChunkTypeRequest request, Comparator&lt;IChunk&gt; sorter, double activationThreshold, boolean bestOne)&apos; to &apos;public Future&lt;Collection&lt;IChunk&gt;&gt; findPartialMatches(ChunkTypeRequest request, Comparator&lt;IChunk&gt; sorter, double activationThreshold, boolean bestOne)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;findPartialMatches&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.declarative{IDeclarativeModule.java[IDeclarativeModule~findPartialMatches~QChunkPattern;~QComparator\&lt;QIChunk;&gt;;~D~Z" name="findPartialMatches" parameter1="ChunkPattern pattern 0 ChunkTypeRequest request false" parameter2="Comparator&lt;IChunk&gt; sorter 1 Comparator&lt;IChunk&gt; sorter false" parameter3="double activationThreshold 2 double activationThreshold false" parameter4="boolean bestOne 3 boolean bestOne false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public Collection&lt;IChunk&gt; org.jactr.core.module.declarative.search.ISearchSystem.findExact(jactr.core.production.request.ChunkTypeRequest pattern, Comparator&lt;IChunk&gt; sortRule)&apos; to &apos;public Collection&lt;IChunk&gt; findExact(jactr.core.production.request.ChunkTypeRequest pattern, Comparator&lt;IChunk&gt; sortRule)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;findExact&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.declarative.search{ISearchSystem.java[ISearchSystem~findExact~QChunkPattern;~QComparator\&lt;QIChunk;&gt;;" name="findExact" parameter1="ChunkPattern pattern 0 org.jactr.core.production.request.ChunkTypeRequest pattern false" parameter2="Comparator&lt;IChunk&gt; sortRule 1 Comparator&lt;IChunk&gt; sortRule false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public Collection&lt;IChunk&gt; org.jactr.core.module.declarative.search.ISearchSystem.findFuzzy(ChunkTypeRequest pattern, Comparator&lt;IChunk&gt; sortRule)&apos; to &apos;public Collection&lt;IChunk&gt; findFuzzy(ChunkTypeRequest pattern, Comparator&lt;IChunk&gt; sortRule)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;findFuzzy&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.declarative.search{ISearchSystem.java[ISearchSystem~findFuzzy~QChunkPattern;~QComparator\&lt;QIChunk;&gt;;" name="findFuzzy" parameter1="ChunkPattern pattern 0 ChunkTypeRequest pattern false" parameter2="Comparator&lt;IChunk&gt; sortRule 1 Comparator&lt;IChunk&gt; sortRule false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public double org.jactr.core.chunk.five.ISubsymbolicChunk5.getActivation(jactr.core.production.request.ChunkTypeRequest retr)&apos; to &apos;public double getActivation(jactr.core.production.request.ChunkTypeRequest retr)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern retr" delegate="false" deprecate="true" description="Change method &apos;getActivation&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.chunk.five{ISubsymbolicChunk5.java[ISubsymbolicChunk5~getActivation~QChunkPattern;" name="getActivation" parameter1="ChunkPattern retr 0 org.jactr.core.production.request.ChunkTypeRequest retr false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public void org.jactr.core.chunk.ChunkActivationComparator.setChunkPattern(ChunkTypeRequest p)&apos; to &apos;public void setChunkTypeRequest(ChunkTypeRequest p)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- New name: &apos;setChunkTypeRequest&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern p" delegate="false" deprecate="true" description="Change method &apos;setChunkPattern&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.chunk{ChunkActivationComparator.java[ChunkActivationComparator~setChunkPattern~QChunkPattern;" name="setChunkTypeRequest" parameter1="ChunkPattern p 0 ChunkTypeRequest p false" project="org.jactr" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.common.buffer.AbstractChunkPatternProcessor&apos; to &apos;AbstractRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.common.buffer.AbstractChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.common.buffer.AbstractRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AbstractChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.common.buffer{AbstractChunkPatternProcessor.java[AbstractChunkPatternProcessor" matchStrategy="1" name="AbstractRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Copy 1 elements(s) to &apos;org.jactr.core.buffer.delegate.AddChunkRequestDelegate.java&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Destination element: &apos;org.jactr.core.buffer.delegate.AddChunkRequestDelegate.java&apos;&#x0A;- Original element: &apos;org.jactr.core.buffer.delegate.AddChunkRequestDelegate.java&apos;" description="Copy compilation unit" destination="/java&lt;org.jactr.core.buffer.delegate{AddChunkRequestDelegate.java" element1="/java&lt;org.jactr.core.buffer.delegate{AddChunkRequestDelegate.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" log="/java&lt;org.jactr.core.buffer.delegate{AddChunkRequestDelegate.java&#x09;true&#x09;true&#x09;ExpandChunkRequestDelegate.java" policy="org.eclipse.jdt.ui.copyResources" project="org.jactr" units="1" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.visual.buffer.processor.VisualLocationChunkPatternProcessor&apos; to &apos;VisualSearchRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.visual.buffer.processor.VisualLocationChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.visual.buffer.processor.VisualSearchRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;VisualLocationChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.visual.buffer.processor{VisualLocationChunkPatternProcessor.java[VisualLocationChunkPatternProcessor" matchStrategy="1" name="VisualSearchRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.visual.buffer.processor.ClearChunkPatternProcessor&apos; to &apos;ClearRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.visual.buffer.processor.ClearChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.visual.buffer.processor.ClearRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;ClearChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.visual.buffer.processor{ClearChunkPatternProcessor.java[ClearChunkPatternProcessor" matchStrategy="1" name="ClearRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.visual.buffer.processor.AttendingChunkPatternProcessor&apos; to &apos;AttendToRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.visual.buffer.processor.AttendingChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.visual.buffer.processor.AttendToRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AttendingChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.visual.buffer.processor{AttendingChunkPatternProcessor.java[AttendingChunkPatternProcessor" matchStrategy="1" name="AttendToRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Change method &apos;public Future&lt;R&gt; org.jactr.core.module.asynch.delegate.IAsynchronousModuleDelegate.process(jactr.core.production.request.IRequest request, .. parameters)&apos; to &apos;public Future&lt;R&gt; process(jactr.core.production.request.IRequest request, .. parameters)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;process&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.asynch.delegate{IAsynchronousModuleDelegate.java[IAsynchronousModuleDelegate~process~QChunkPattern;~\[QObject;" name="process" parameter1="ChunkPattern pattern 0 org.jactr.core.production.request.IRequest request false" parameter2="Object... parameters 1 Object... parameters false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected boolean org.jactr.core.module.asynch.delegate.AbstractAsynchronousModuleDelegate.shouldProcess(IRequest request, .. parameters)&apos; to &apos;protected boolean shouldProcess(IRequest request, .. parameters)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;shouldProcess&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.asynch.delegate{AbstractAsynchronousModuleDelegate.java[AbstractAsynchronousModuleDelegate~shouldProcess~QChunkPattern;~\[QObject;" name="shouldProcess" parameter1="ChunkPattern pattern 0 IRequest request false" parameter2="Object... parameters 1 Object... parameters false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected R org.jactr.core.module.asynch.delegate.AbstractAsynchronousModuleDelegate.processInternal(IRequest request, .. parameters)&apos; to &apos;protected R processInternal(IRequest request, .. parameters)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;processInternal&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.asynch.delegate{AbstractAsynchronousModuleDelegate.java[AbstractAsynchronousModuleDelegate~processInternal~QChunkPattern;~\[QObject;" name="processInternal" parameter1="ChunkPattern pattern 0 IRequest request false" parameter2="Object... parameters 1 Object... parameters false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected void org.jactr.core.module.asynch.delegate.AbstractAsynchronousModuleDelegate.finalizeProcessing(IRequest request, R result, .. parameters)&apos; to &apos;protected void finalizeProcessing(IRequest request, R result, .. parameters)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;finalizeProcessing&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.asynch.delegate{AbstractAsynchronousModuleDelegate.java[AbstractAsynchronousModuleDelegate~finalizeProcessing~QChunkPattern;~QR;~\[QObject;" name="finalizeProcessing" parameter1="ChunkPattern pattern 0 IRequest request false" parameter2="R result 1 R result false" parameter3="Object... parameters 2 Object... parameters false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected double org.jactr.core.module.asynch.delegate.AbstractAsynchronousModuleDelegate.computeHarvestTime(IRequest request, R result, double startTime, .. parameters)&apos; to &apos;protected double computeHarvestTime(IRequest request, R result, double startTime, .. parameters)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;computeHarvestTime&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.asynch.delegate{AbstractAsynchronousModuleDelegate.java[AbstractAsynchronousModuleDelegate~computeHarvestTime~QChunkPattern;~QR;~D~\[QObject;" name="computeHarvestTime" parameter1="ChunkPattern pattern 0 IRequest request false" parameter2="R result 1 R result false" parameter3="double startTime 2 double startTime false" parameter4="Object... parameters 3 Object... parameters false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected ITimedEvent org.jactr.core.module.asynch.delegate.AbstractAsynchronousModuleDelegate.createHarvestTimedEvent(double start, double end, IRequest request, R result, .. parameters)&apos; to &apos;protected ITimedEvent createHarvestTimedEvent(double start, double end, IRequest request, R result, .. parameters)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;createHarvestTimedEvent&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.asynch.delegate{AbstractAsynchronousModuleDelegate.java[AbstractAsynchronousModuleDelegate~createHarvestTimedEvent~D~D~QChunkPattern;~QR;~\[QObject;" name="createHarvestTimedEvent" parameter1="double start 0 double start false" parameter2="double end 1 double end false" parameter3="ChunkPattern pattern 2 IRequest request false" parameter4="R result 3 R result false" parameter5="Object... parameters 4 Object... parameters false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected void org.jactr.core.module.asynch.delegate.AbstractAsynchronousModuleDelegate.processInternalCompleted(IRequest request, R result, double startTime, double harvestAt)&apos; to &apos;protected void processInternalCompleted(IRequest request, R result, double startTime, double harvestAt)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;processInternalCompleted&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.core.module.asynch.delegate{AbstractAsynchronousModuleDelegate.java[AbstractAsynchronousModuleDelegate~processInternalCompleted~QChunkPattern;~QR;~D~D" name="processInternalCompleted" parameter1="ChunkPattern pattern 0 IRequest request false" parameter2="R result 1 R result false" parameter3="double startTime 2 double startTime false" parameter4="double harvestAt 3 double harvestAt false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public Collection&lt;IIdentifier&gt; org.jactr.modules.pm.common.map.IFeatureMap.getCandidateRealObjects(ChunkTypeRequest request)&apos; to &apos;public Collection&lt;IIdentifier&gt; getCandidateRealObjects(ChunkTypeRequest request)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern searchPattern" delegate="false" deprecate="true" description="Change method &apos;getCandidateRealObjects&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.common.map{IFeatureMap.java[IFeatureMap~getCandidateRealObjects~QChunkPattern;" name="getCandidateRealObjects" parameter1="ChunkPattern searchPattern 0 ChunkTypeRequest request false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public void org.jactr.modules.pm.common.map.IFeatureMap.fillSlotValues(ChunkTypeRequest mutableRequest, IIdentifier identifier, ChunkTypeRequest originalSearchRequest)&apos; to &apos;public void fillSlotValues(ChunkTypeRequest mutableRequest, IIdentifier identifier, ChunkTypeRequest originalSearchRequest)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern mutablePattern&#x0A;     ChunkPattern originalSearchPattern" delegate="false" deprecate="true" description="Change method &apos;fillSlotValues&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.common.map{IFeatureMap.java[IFeatureMap~fillSlotValues~QChunkPattern;~QIIdentifier;~QChunkPattern;" name="fillSlotValues" parameter1="ChunkPattern mutablePattern 0 ChunkTypeRequest mutableRequest false" parameter2="IIdentifier identifier 1 IIdentifier identifier false" parameter3="ChunkPattern originalSearchPattern 2 ChunkTypeRequest originalSearchRequest false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public boolean org.jactr.modules.pm.common.map.IFeatureMap.isInterestedIn(ChunkTypeRequest request)&apos; to &apos;public boolean isInterestedIn(ChunkTypeRequest request)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;isInterestedIn&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.common.map{IFeatureMap.java[IFeatureMap~isInterestedIn~QChunkPattern;" name="isInterestedIn" parameter1="ChunkPattern pattern 0 ChunkTypeRequest request false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public IChunk org.jactr.modules.pm.visual.visicon.map.IVisualMap.getVisualLocationFor(ChunkTypeRequest request)&apos; to &apos;public IChunk getVisualLocationFor(ChunkTypeRequest request)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;getVisualLocationFor&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.visual.visicon.map{IVisualMap.java[IVisualMap~getVisualLocationFor~QChunkPattern;" name="getVisualLocationFor" parameter1="ChunkPattern pattern 0 ChunkTypeRequest request false" project="org.jactr" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.visual.visicon.misc.ChunkPatternComparator&apos; to &apos;ChunkTypeRequestComparator&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.visual.visicon.misc.ChunkPatternComparator&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.visual.visicon.misc.ChunkTypeRequestComparator&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;ChunkPatternComparator&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.visual.visicon.misc{ChunkPatternComparator.java[ChunkPatternComparator" matchStrategy="1" name="ChunkTypeRequestComparator" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.visual.buffer.processor.StartTrackingChunkPatternProcessor&apos; to &apos;StartTrackingRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.visual.buffer.processor.StartTrackingChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.visual.buffer.processor.StartTrackingRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;StartTrackingChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.visual.buffer.processor{StartTrackingChunkPatternProcessor.java[StartTrackingChunkPatternProcessor" matchStrategy="1" name="StartTrackingRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.visual.buffer.processor.AssignFINSTChunkPatternProcessor&apos; to &apos;AssignFINSTRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.visual.buffer.processor.AssignFINSTChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.visual.buffer.processor.AssignFINSTRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AssignFINSTChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.visual.buffer.processor{AssignFINSTChunkPatternProcessor.java[AssignFINSTChunkPatternProcessor" matchStrategy="1" name="AssignFINSTRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.aural.buffer.processor.ClearChunkPatternProcessor&apos; to &apos;ClearRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.aural.buffer.processor.ClearChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.aural.buffer.processor.ClearRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;ClearChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.aural.buffer.processor{ClearChunkPatternProcessor.java[ClearChunkPatternProcessor" matchStrategy="1" name="ClearRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.aural.buffer.processor.AuralSearchChunkPatternProcessor&apos; to &apos;AuralSearchRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.aural.buffer.processor.AuralSearchChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.aural.buffer.processor.AuralSearchRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AuralSearchChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.aural.buffer.processor{AuralSearchChunkPatternProcessor.java[AuralSearchChunkPatternProcessor" matchStrategy="1" name="AuralSearchRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.aural.buffer.processor.AttendingChunkPatternProcessor&apos; to &apos;AttendRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.aural.buffer.processor.AttendingChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.aural.buffer.processor.AttendRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AttendingChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.aural.buffer.processor{AttendingChunkPatternProcessor.java[AttendingChunkPatternProcessor" matchStrategy="1" name="AttendRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.aural.buffer.processor.AttendRequestDelegate&apos; to &apos;AttendToRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.aural.buffer.processor.AttendRequestDelegate&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.aural.buffer.processor.AttendToRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AttendRequestDelegate&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.aural.buffer.processor{AttendRequestDelegate.java[AttendRequestDelegate" matchStrategy="1" name="AttendToRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Change method &apos;public Future&lt;IChunk&gt; org.jactr.modules.pm.aural.IAuralModule.scanAuditoryField(jactr.core.production.request.ChunkTypeRequest request, boolean isStuffRequest)&apos; to &apos;public Future&lt;IChunk&gt; scanAuditoryField(jactr.core.production.request.ChunkTypeRequest request, boolean isStuffRequest)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;scanAuditoryField&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.aural{IAuralModule.java[IAuralModule~scanAuditoryField~QChunkPattern;~Z" name="scanAuditoryField" parameter1="ChunkPattern pattern 0 org.jactr.core.production.request.ChunkTypeRequest request false" parameter2="boolean isStuffRequest 1 boolean isStuffRequest false" project="org.jactr" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.vocal.buffer.processor.ClearChunkPatternProcessor&apos; to &apos;ClearRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.vocal.buffer.processor.ClearChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.vocal.buffer.processor.ClearRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;ClearChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.vocal.buffer.processor{ClearChunkPatternProcessor.java[ClearChunkPatternProcessor" matchStrategy="1" name="ClearRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.vocal.buffer.processor.SpeechChunkPatternProcessor&apos; to &apos;SpeechRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.vocal.buffer.processor.SpeechChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.vocal.buffer.processor.SpeechRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;SpeechChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.vocal.buffer.processor{SpeechChunkPatternProcessor.java[SpeechChunkPatternProcessor" matchStrategy="1" name="SpeechRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Change method &apos;public void org.jactr.modules.pm.vocal.IVocalModule.prepare(jactr.core.production.request.ChunkTypeRequest request, String text, boolean isVocalization)&apos; to &apos;public void prepare(jactr.core.production.request.ChunkTypeRequest request, String text, boolean isVocalization)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;prepare&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.vocal{IVocalModule.java[IVocalModule~prepare~QChunkPattern;~QString;~Z" name="prepare" parameter1="ChunkPattern pattern 0 org.jactr.core.production.request.ChunkTypeRequest request false" parameter2="String text 1 String text false" parameter3="boolean isVocalization 2 boolean isVocalization false" project="org.jactr" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.motor.buffer.processor.ClearChunkPatternProcessor&apos; to &apos;ClearRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.motor.buffer.processor.ClearChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.motor.buffer.processor.ClearRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;ClearChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.motor.buffer.processor{ClearChunkPatternProcessor.java[ClearChunkPatternProcessor" matchStrategy="1" name="ClearRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.motor.buffer.processor.AbortCommandChunkPatternProcessor&apos; to &apos;AbortRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.motor.buffer.processor.AbortCommandChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.motor.buffer.processor.AbortRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AbortCommandChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.motor.buffer.processor{AbortCommandChunkPatternProcessor.java[AbortCommandChunkPatternProcessor" matchStrategy="1" name="AbortRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Rename type &apos;org.jactr.modules.pm.motor.buffer.processor.MotorCommandChunkPatternProcessor&apos; to &apos;MotorRequestDelegate&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Original element: &apos;org.jactr.modules.pm.motor.buffer.processor.MotorCommandChunkPatternProcessor&apos;&#x0A;- Renamed element: &apos;org.jactr.modules.pm.motor.buffer.processor.MotorRequestDelegate&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;MotorCommandChunkPatternProcessor&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/java&lt;org.jactr.modules.pm.motor.buffer.processor{MotorCommandChunkPatternProcessor.java[MotorCommandChunkPatternProcessor" matchStrategy="1" name="MotorRequestDelegate" project="org.jactr" qualified="false" references="true" similarDeclarations="false" textual="false" version="1.0"/>
<refactoring comment="Change method &apos;public void org.jactr.modules.pm.motor.IMotorModule.prepare(jactr.core.production.request.ChunkTypeRequest pattern, boolean prepareOnly)&apos; to &apos;public void prepare(jactr.core.production.request.ChunkTypeRequest pattern, boolean prepareOnly)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;prepare&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor{IMotorModule.java[IMotorModule~prepare~QChunkPattern;~Z" name="prepare" parameter1="ChunkPattern pattern 0 org.jactr.core.production.request.ChunkTypeRequest pattern false" parameter2="boolean prepareOnly 1 boolean prepareOnly false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected IMovement org.jactr.modules.pm.motor.managers.AbstractManager.initialize(IMovement movement, jactr.core.production.request.ChunkTypeRequest request, double requestTime) throws IllegalStateException, IllegalArgumentException&apos; to &apos;protected IMovement initialize(IMovement movement, jactr.core.production.request.ChunkTypeRequest request, double requestTime) throws IllegalStateException, IllegalArgumentException&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;initialize&apos;" element1="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalStateException.class[IllegalStateException" element2="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalArgumentException.class[IllegalArgumentException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor.managers{AbstractManager.java[AbstractManager~initialize~QIMovement;~QChunkPattern;~D" kind1="0" kind2="0" name="initialize" parameter1="IMovement movement 0 IMovement movement false" parameter2="ChunkPattern pattern 1 org.jactr.core.production.request.ChunkTypeRequest request false" parameter3="double requestTime 2 double requestTime false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected IMovement org.jactr.modules.pm.motor.managers.AbstractManager.initializeInternal(IMovement movement, ChunkTypeRequest request, double requestTime) throws IllegalStateException, IllegalArgumentException&apos; to &apos;protected IMovement initializeInternal(IMovement movement, ChunkTypeRequest request, double requestTime) throws IllegalStateException, IllegalArgumentException&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;initializeInternal&apos;" element1="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalStateException.class[IllegalStateException" element2="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalArgumentException.class[IllegalArgumentException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor.managers{AbstractManager.java[AbstractManager~initializeInternal~QIMovement;~QChunkPattern;~D" kind1="0" kind2="0" name="initializeInternal" parameter1="IMovement movement 0 IMovement movement false" parameter2="ChunkPattern pattern 1 ChunkTypeRequest request false" parameter3="double requestTime 2 double requestTime false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected IIdentifier org.jactr.modules.pm.motor.managers.AbstractManager.getMuscleIdentifier(IMovement movement, ChunkTypeRequest request) throws IllegalArgumentException&apos; to &apos;protected IIdentifier getMuscleIdentifier(IMovement movement, ChunkTypeRequest request) throws IllegalArgumentException&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;getMuscleIdentifier&apos;" element1="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalArgumentException.class[IllegalArgumentException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor.managers{AbstractManager.java[AbstractManager~getMuscleIdentifier~QIMovement;~QChunkPattern;" kind1="0" name="getMuscleIdentifier" parameter1="IMovement movement 0 IMovement movement false" parameter2="ChunkPattern pattern 1 ChunkTypeRequest request false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected void org.jactr.modules.pm.motor.managers.AbstractManager.checkForAcceptability(IMovement movement, ChunkTypeRequest request) throws IllegalStateException, IllegalArgumentException&apos; to &apos;protected void checkForAcceptability(IMovement movement, ChunkTypeRequest request) throws IllegalStateException, IllegalArgumentException&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;checkForAcceptability&apos;" element1="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalStateException.class[IllegalStateException" element2="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalArgumentException.class[IllegalArgumentException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor.managers{AbstractManager.java[AbstractManager~checkForAcceptability~QIMovement;~QChunkPattern;" kind1="0" kind2="0" name="checkForAcceptability" parameter1="IMovement movement 0 IMovement movement false" parameter2="ChunkPattern pattern 1 ChunkTypeRequest request false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public IEfferentObject org.jactr.modules.pm.motor.command.ICommandTranslator.getMuscle(jactr.core.production.request.ChunkTypeRequest request, IModel model) throws IllegalArgumentException&apos; to &apos;public IEfferentObject getMuscle(jactr.core.production.request.ChunkTypeRequest request, IModel model) throws IllegalArgumentException&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;getMuscle&apos;" element1="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalArgumentException.class[IllegalArgumentException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor.command{ICommandTranslator.java[ICommandTranslator~getMuscle~QChunkPattern;~QIModel;" kind1="0" name="getMuscle" parameter1="ChunkPattern pattern 0 org.jactr.core.production.request.ChunkTypeRequest request false" parameter2="IModel model 1 IModel model false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public IEfferentCommand org.jactr.modules.pm.motor.command.ICommandTranslator.translate(ChunkTypeRequest request, IEfferentObject muscle, IModel model) throws IllegalArgumentException&apos; to &apos;public IEfferentCommand translate(ChunkTypeRequest request, IEfferentObject muscle, IModel model) throws IllegalArgumentException&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;translate&apos;" element1="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalArgumentException.class[IllegalArgumentException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor.command{ICommandTranslator.java[ICommandTranslator~translate~QChunkPattern;~QIEfferentObject;~QIModel;" kind1="0" name="translate" parameter1="ChunkPattern pattern 0 ChunkTypeRequest request false" parameter2="IEfferentObject muscle 1 IEfferentObject muscle false" parameter3="IModel model 2 IModel model false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public boolean org.jactr.modules.pm.motor.command.ICommandTranslatorDelegate.handles(jactr.core.production.request.ChunkTypeRequest request)&apos; to &apos;public boolean handles(jactr.core.production.request.ChunkTypeRequest request)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;handles&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor.command{ICommandTranslatorDelegate.java[ICommandTranslatorDelegate~handles~QChunkPattern;" name="handles" parameter1="ChunkPattern pattern 0 org.jactr.core.production.request.ChunkTypeRequest request false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected ICommandTranslatorDelegate org.jactr.modules.pm.motor.command.DefaultCommandTranslator.getDelegate(ChunkTypeRequest request) throws IllegalArgumentException&apos; to &apos;protected ICommandTranslatorDelegate getDelegate(ChunkTypeRequest request) throws IllegalArgumentException&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;getDelegate&apos;" element1="/\/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/1.5.0\/Classes\/classes.jar&lt;java.lang(IllegalArgumentException.class[IllegalArgumentException" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor.command{DefaultCommandTranslator.java[DefaultCommandTranslator~getDelegate~QChunkPattern;" kind1="0" name="getDelegate" parameter1="ChunkPattern pattern 0 ChunkTypeRequest request false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;protected double[] org.jactr.modules.pm.motor.command.translators.PeckTranslator.getTarget(ChunkTypeRequest request, IEfferentObject muscle)&apos; to &apos;protected double[] getTarget(ChunkTypeRequest request, IEfferentObject muscle)&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- Changed parameters:&#x0A;     ChunkPattern pattern" delegate="false" deprecate="true" description="Change method &apos;getTarget&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor.command.translators{PeckTranslator.java[PeckTranslator~getTarget~QChunkPattern;~QIEfferentObject;" name="getTarget" parameter1="ChunkPattern pattern 0 ChunkTypeRequest request false" parameter2="IEfferentObject muscle 1 IEfferentObject muscle false" project="org.jactr" version="1.0"/>
<refactoring comment="Change method &apos;public ChunkPattern org.jactr.modules.pm.motor.command.IMovement.getChunkPattern()&apos; to &apos;public org.jactr.core.production.request.ChunkTypeRequest getChunkTypeRequest()&apos;&#x0A;- Original project: &apos;org.jactr&apos;&#x0A;- New name: &apos;getChunkTypeRequest&apos;&#x0A;- New return type: &apos;org.jactr.core.production.request.ChunkTypeRequest&apos;" delegate="false" deprecate="true" description="Change method &apos;getChunkPattern&apos;" flags="589830" id="org.eclipse.jdt.ui.change.method.signature" input="/java&lt;org.jactr.modules.pm.motor.command{IMovement.java[IMovement~getChunkPattern" name="getChunkTypeRequest" project="org.jactr" return="org.jactr.core.production.request.ChunkTypeRequest" version="1.0"/>
</session>