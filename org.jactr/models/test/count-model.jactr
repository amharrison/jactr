<actr>
 <model name="Unit1 Count">
 
 <modules>
  <module class="org.jactr.core.module.six.GoalModule"/>
  <module class="org.jactr.core.module.six.RetrievalModule"/>
 </modules>
 
 <declarative-memory>
  <chunk-type name="count-order">
   <slot name="first" equals="nil"/>
   <slot name="second" equals="nil"/>
  </chunk-type>

  <chunk-type name="count-from">
   <slot name="start" equals="nil"/>
   <slot name="end" equals="nil"/>
   <slot name="step" equals="nil"/>
  </chunk-type>

  <chunk name="start" type="chunk"/>
  <chunk name="counting" type="chunk"/>
  <chunk name="stop" type="chunk"/>


  <chunk type="count-order" name="b">
   <slot name="first" equals="1"/>
   <slot name="second" equals="2"/>
  </chunk>

  <chunk type="count-order" name="c">
   <slot name="first" equals="2"/>
   <slot name="second" equals="3"/>
  </chunk>

  <chunk type="count-order" name="d">
   <slot name="first" equals="3"/>
   <slot name="second" equals="4"/>
  </chunk>

  <chunk type="count-order" name="e">
   <slot name="first" equals="4"/>
   <slot name="second" equals="5"/>
  </chunk>

  <chunk type="count-order" name="f">
   <slot name="first" equals="5"/>
   <slot name="second" equals="6"/>
  </chunk>

  <chunk type="count-from" name="first-goal">
   <slot name="start" equals="2"/>
   <slot name="end" equals="5"/>
   <slot name="step" equals="start"/>
  </chunk>

 </declarative-memory>
 <procedural-memory>
  <production name="start">
   <condition>
     <match buffer="goal" type="count-from">
      <slot name="start" equals="=num1"/>
      <slot name="step" equals="start"/>
     </match>
   </condition>
   <action>
    <modify buffer="goal">
     <slot name="step" equals="counting"/>
    </modify>
    <add buffer="retrieval" type="count-order">
     <slot name="first" equals="=num1"/>
    </add>
    <output>"Searching for something starting at =num1"</output>
   </action>
  </production>

  <production name="failed">
   <condition>
     <match buffer="goal" type="count-from">
      <slot name="start" equals="=num"/>
      <slot name="step" equals="counting"/>
     </match>
     <match buffer="retrieval" type="error">
     </match>
   </condition>
   <action>
    <remove buffer="goal"/>
    <remove buffer="retrieval"/>
    <output> "Awh crap, I can't retrieve anything starting with =num "</output>
   </action>
  </production>

  <production name="increment">
   <condition>
     <match buffer="goal" type="count-from">
      <slot name="start" equals="=num1"/>
      <slot name="end" not="=num1"/>
      <slot name="step" equals="counting"/>
     </match>
     <match buffer="retrieval" type="count-order">
      <slot name="first" equals="=num1"/>
      <slot name="second" equals="=num2"/>
     </match>
   </condition>
   <action>
    <modify buffer="goal">
     <slot name="start" equals="=num2"/>
    </modify>
    <add buffer="retrieval" type="count-order">
     <slot name="first" equals="=num2"/>
    </add>
    <output>"=num1"</output>
   </action>
  </production>


  <production name="stop">
   <condition>
    <match buffer="goal" type="count-from">
     <slot name="start" equals="=num"/>
     <slot name="end" equals="=num"/>
     <slot name="step" equals="counting"/>
    </match>
   </condition>
   <action>
    <modify buffer="goal">
     <slot name="step" equals="stop"/>
    </modify>
    <output>"Answer =num"</output>
   </action>
  </production>
 </procedural-memory>

 
 </model>
</actr>